import React from 'react'; import { MoreHorizontal, Pencil, Trash2, AlertTriangle } from 'lucide-react'; import { Progress } from '@/components/ui/progress'; import { Button } from '@/components/ui/button'; import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"; import { Badge } from '@/components/ui/badge'; export default function BudgetItem({ budget, spent, onEdit, onDelete }) { const progress = (spent / budget.amount) * 100; const remaining = budget.amount - spent; const isOverBudget = spent > budget.amount; const getStatusColor = () => { if (isOverBudget) return 'text-red-400'; if (progress > 80) return 'text-yellow-400'; return 'text-green-400'; }; const getProgressBarColor = () => { if (isOverBudget) return '[&>div]:bg-red-500'; if (progress > 80) return '[&>div]:bg-yellow-500'; return '[&>div]:bg-green-500'; }; return ( <div className="bg-gray-950/30 border border-gray-700/50 rounded-lg p-6 hover:bg-gray-800/50 transition-all"> <div className="flex justify-between items-start mb-4"> <div> <h3 className="text-lg font-bold text-white">{budget.category}</h3> <p className="text-sm text-gray-400 capitalize">{budget.period} budget</p> </div> <div className="flex items-center gap-2"> {isOverBudget && ( <AlertTriangle className="w-5 h-5 text-red-400" /> )} <DropdownMenu> <DropdownMenuTrigger asChild> <Button variant="ghost" size="icon" className="hover:bg-gray-700 -mt-2 -mr-2"> <MoreHorizontal className="w-4 h-4" /> </Button> </DropdownMenuTrigger> <DropdownMenuContent className="bg-gray-800 border-gray-700 text-white"> <DropdownMenuItem onClick={() => onEdit(budget)} className="cursor-pointer hover:!bg-gray-700"> <Pencil className="w-4 h-4 mr-2" /> Edit </DropdownMenuItem> <DropdownMenuItem onClick={() => onDelete(budget.id)} className="cursor-pointer !text-red-400 hover:!bg-red-500/20"> <Trash2 className="w-4 h-4 mr-2" /> Delete </DropdownMenuItem> </DropdownMenuContent> </DropdownMenu> </div> </div> <div className="space-y-3"> <div className="flex justify-between items-end"> <div> <span className={`text-2xl font-bold ${getStatusColor()}`}>${spent.toFixed(2)}</span> <span className="text-gray-400 ml-2">of ${budget.amount.toFixed(2)}</span> </div> {isOverBudget ? ( <Badge variant="destructive" className="bg-red-500/20 text-red-400 border-red-500/30"> Over Budget </Badge> ) : ( <span className="text-sm text-gray-400"> ${remaining.toFixed(2)} remaining </span> )} </div> <Progress value={Math.min(progress, 100)} className={`h-3 ${getProgressBarColor()}`} /> <p className={`text-right text-sm font-semibold ${getStatusColor()}`}> {progress.toFixed(1)}% used </p> </div> </div> ); }
